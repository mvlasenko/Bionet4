@using Bionet4.Data.Properties
@using Bionet4.Data.Contracts
@using Bionet4.Admin.Helpers

@model IPagedCollection

@{
    var controller = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();

    ViewBag.Title = controller;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@controller</h2>

<div style="padding-bottom: 10px;">
    <button class="btn btn-primary create-item">@Resources.CreateNew</button>
</div>

<div>
    <table class="table" id="grid">

        <thead>
            <tr>
                @foreach (Bionet4.Admin.ViewModels.FieldInfo prop in ViewBag.ListFields)
                {
                    <th>@prop.Title</th>
                }
                <th></th>
            </tr>
            <tr>
                @foreach (Bionet4.Admin.ViewModels.FieldInfo prop in ViewBag.ListFields)
                {
                    <td>
                        @if (prop.TypeName == "String" && prop.UIHint != "MultilineText" && prop.UIHint != "_Image" && prop.UIHint != "_FaIcon"
                            || prop.TypeName == "DateTime"
                            || prop.TypeName == "Int32" && prop.Name != "SeqID") {
                        <select id="filter_@prop.Name" data-id="@prop.Name" data-type="@prop.TypeName" class="row-filter">
                            <option value="">@string.Format("< {0} >", Resources.SelectItem)</option>
                        </select>
                        }
                    </td>
                }
                <td></td>
            </tr>
            <tr>
                @foreach (Bionet4.Admin.ViewModels.FieldInfo prop in ViewBag.ListFields)
                {
                    <th>
                        @if (prop.UIHint == "_Enum") {
                            var values = Enum.GetValues(prop.Type).Cast<Enum>()
                                .Select(v => new SelectListItem
                                {
                                    Selected = false,
                                    Text = v.ToString(),
                                    Value = v.ToString()
                                });
                            @Html.DropDownList(prop.Name, values, string.Format("< {0} >", Resources.SelectItem), new { @class = "form-control" })
                        }
                    </th>
                }
                <th></th>
            </tr>
        </thead>

        <tbody></tbody>

    </table>
</div>

<div id="pager" style="margin: 6px;">
</div>

<!-- Modal -->
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="modalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content" id="modal-content"></div>
    </div>
</div>
<!-- Modal - 2nd level -->
<div class="modal fade" id="modal2" tabindex="-1" role="dialog" aria-labelledby="modalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="modal2-content"></div>
    </div>
</div>

<!-- loading spinner -->
<div class="modal fade" id="loader" role="dialog" style="top: 300px; left: 300px;">
    <div class="modal-dialog">
        <div class="loader"></div>
    </div>
</div>

@section scripts {

    @Styles.Render("~/Content/datetimepicker")
    @Scripts.Render("~/bundles/datetimepicker")

    @Styles.Render("~/Content/dropzone")
    @Scripts.Render("~/bundles/dropzone")

    @Styles.Render("~/Content/jQuery-File-Upload")
    @Scripts.Render("~/bundles/jQuery-File-Upload")

    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

    function InitModal() {

        $('.edit-item').unbind();
        $('.edit-item').click(function() {
            var url = "@Url.Content("~/")@controller/Update";
            var id = $(this).attr('data-id');
            window.open(url + '/' + id);
        });

        @*$('.edit-item').unbind();
        $('.edit-item').click(function() {
            var url = "@Url.Content("~/")@controller/UpdatePartial";
            var id = $(this).attr('data-id');
            $.get(url + '/' + id, function(data) {
                $('#modal-content').html(data);

                $('#modal').modal('show');
                jQuery.validator.unobtrusive.parse('#frmModal');

                AddAsterisk();
                InitDatePicker();
                RefreshParagraphs();
                RefreshAlbumDetails();
            });
        });*@

        $('.create-item').unbind();
        $('.create-item').click(function() {
            var url = "@Url.Content("~/")@controller/Create";
            window.open(url);
        });

        @*$('.create-item').unbind();
        $('.create-item').click(function() {
            var url = "@Url.Content("~/")@controller/CreatePartial";
            $.get(url, function(data) {
                $('#modal-content').html(data);

                $('#modal').modal('show');
                jQuery.validator.unobtrusive.parse('#frmModal');

                AddAsterisk();
                InitDatePicker();
            });
        });*@

        $('.delete-item').unbind();
        $('.delete-item').click(function () {

            if (confirm('@Resources.DeleteConfirm'))
            {
                var url = "@Url.Content("~/")@controller/DestroyPartial";
                var id = $(this).attr('data-id');
                $.get(url + '/' + id, function(data) {

                    totalCount = data.totalCount;

                    var pageSize = @Model.PageSize;
                    var currentPageIndex = Math.floor((totalCount - 1) / pageSize) + 1;

                    InitPager();
                    InitRowFilters();
                    RefreshGrid();

                });
            }
        });
    }

    function InitParagraphModal() {

        $('.create-paragraph').unbind();
        $('.create-paragraph').click(function () {
            var url = "@Url.Content("~/")Paragraphs/CreateParagraph?ArticleId=" + $("#Id").val();
            $.get(url, function(data) {
                $('#modal2-content').html(data);

                $('#modal2').modal('show');
                jQuery.validator.unobtrusive.parse('#frmModal2');

                AddAsterisk();
            });
        });

        $('.edit-paragraph').unbind();
        $('.edit-paragraph').click(function() {
            var url = "@Url.Content("~/")Paragraphs/UpdatePartial";
            var id = $(this).attr('data-id');
            $.get(url + '/' + id, function(data) {
                $('#modal2-content').html(data);

                $('#modal2').modal('show');
                jQuery.validator.unobtrusive.parse('#frmModal2');

                AddAsterisk();
            });
        });

        $('.delete-paragraph').unbind();
        $('.delete-paragraph').click(function () {
            if (confirm('@Resources.DeleteConfirm'))
            {
                var url = "@Url.Content("~/")Paragraphs/DestroyPartial";
                var id = $(this).attr('data-id');
                $.get(url + '/' + id, function(data) {
                    RefreshParagraphs();
                });
            }
        });
    }

    function InitAlbumDetailModal() {

        $('.create-ad').unbind();
        $('.create-ad').click(function () {
            var url = "@Url.Content("~/")AlbumDetails/CreateAlbumDetail?AlbumId=" + $("#Id").val();
            $.get(url, function(data) {
                $('#modal2-content').html(data);

                $('#modal2').modal('show');
                jQuery.validator.unobtrusive.parse('#frmModal2');

                AddAsterisk();
            });
        });

        $('.edit-ad').unbind();
        $('.edit-ad').click(function() {
            var url = "@Url.Content("~/")AlbumDetails/UpdatePartial";
            var id = $(this).attr('data-id');
            $.get(url + '/' + id, function(data) {
                $('#modal2-content').html(data);

                $('#modal2').modal('show');
                jQuery.validator.unobtrusive.parse('#frmModal2');

                AddAsterisk();
            });
        });

        $('.delete-ad').unbind();
        $('.delete-ad').click(function () {
            if (confirm('@Resources.DeleteConfirm'))
            {
                var url = "@Url.Content("~/")AlbumDetails/DestroyPartial";
                var id = $(this).attr('data-id');
                $.get(url + '/' + id, function(data) {

                    RefreshAlbumDetails();

                });
            }
        });
    }

    function InitRowFilters() {

        $(".row-filter").unbind();
        $(".row-filter").prop("disabled", true);

        $.get("@Url.Content("~/")@controller/GetList", function (data) {
            $(".row-filter").each(function () {
                var id = $(this).attr('id');
                var name = $(this).data('id');
                var type = $(this).data('type');

                let col_data = data.map(a => a[name]).filter(function (value, index, self) { return self.indexOf(value) === index; });

                $.each(col_data, function (idx, item) {

                    var text = type == "DateTime" && item != null ? (new Date(parseInt(item.substr(6)))).toLocaleString() : item;
                    $("#" + id).append($("<option></option>")
                        .attr("value", item)
                        .text(text));
                });

                $("#" + id).prop("disabled", false);
                $("#" + id).change(function () {

                    currentPageIndex = 1;

                    var f = GetFilters();
                    var url = "@Url.Content("~/")@controller/GetCount/?f=" + f;
                    $.ajax({
                        type: 'GET',
                        dataType: 'Json',
                        url: url,
                        success: function(data) {

                            totalCount = data.totalCount;
                            InitPager();

                        },
                        processData: false,
                        async: true
                    });

                    RefreshGrid();
                });
            });
        });
    }

    function InitPager() {

        var pageSize = @Model.PageSize;

        $('#pager').empty();

        for (i = 1; i <= (totalCount - 1) / pageSize + 1; i++)
        {
            $('#pager').append('<button class="btn btn-primary page-item ' + (i == currentPageIndex ? "disabled" : "") + '" style="margin: 4px;" data-id="' + i +'">' + i + '</button>');
        }

        $('.page-item').click(function () {
            currentPageIndex = $(this).attr('data-id');

            $('.page-item').removeClass("disabled");
            $(this).addClass("disabled");

            RefreshGrid();
        });
    }

    function GetFilters() {
        var f = "";
        $(".row-filter").each(function () {
            var id = $(this).attr('id');
            var name = $(this).data('id');
            var type = $(this).data('type');
            var val = $(this).val();
            if (val) {
                f = f + name + "=" + val + ";"
            }
        });
        return f;
    }

    function RefreshGrid() {
        $('#loader').modal('show');

        var f = GetFilters();
        var url = "@Url.Content("~/")@controller/GetPagedList/" + currentPageIndex + "?f=" + f;
        $.ajax({
            type: 'GET',
            dataType: 'Json',
            url: url,
            success: function(data) {

                $('table#grid TBODY').empty();

                $.each(data, function (idx, item) {
                    var row = "<tr>";

                var val = '';
                @foreach (Bionet4.Admin.ViewModels.FieldInfo prop in ViewBag.ListFields)
                {
                    if (prop.UIHint == "_Image")
                    {
                        @Html.Raw("row += (item.ImageID ? '<td><img src=\"/admin/Images/Image/' + item.ImageID + '?width=100\" width=100 height=100 /></td>' : '<td><i class=\"fa ' + (item.FaIcon ? item.FaIcon : 'fa-question-circle') + ' fa-4x\"></i></td>');\n");
                    }
                    else if(prop.TypeName == "DateTime")
                    {
                        @Html.Raw("row += '<td>' + (item." + prop.Name + " != null ? (new Date(parseInt(item." + prop.Name + ".substr(6)))).toLocaleString() : '') + '</td>';\n");
                    }
                    else
                    {
                        @Html.Raw("row += '<td>' + (item." + prop.Name + " || '') + '</td>';\n");
                    }
                }
                    row += "<td align='right'><button class='btn btn-primary edit-item' data-id='" + item.Id + "'>@Resources.Edit</button> <button class='btn btn-primary delete-item' data-id='" + item.Id + "'>@Resources.Delete</button></td>";
                    row += "</tr>";

                    $('table#grid TBODY').append(row);
                });

                $('#loader').modal('hide');

                InitModal();
            },
            processData: false,
            async: true
        });
    }

    function RefreshParagraphs() {
        var url = "@Url.Content("~/")Paragraphs/GetParagraphs?ArticleId=" + $("#Id").val();
        $.ajax({
            type: 'GET',
            dataType: 'Json',
            url: url,
            success: function(data) {

                $('table#gridParagraphs TBODY').empty();

                $.each(data, function (idx, item) {
                    var row = "<tr>";
                    row += (item.ImageID ? '<td><img src="/admin/Images/Image/' + item.ImageID + '?width=100" width=100 height=100 /></td>' : '<td><i class="fa ' + (item.FaIcon ? item.FaIcon : 'fa-question-circle') + ' fa-4x"></i></td>');
                    row += '<td>' + item.Name + '</td>';
                    row += '<td>' + item.Description + '</td>';
                    row += "<td align='right'><button type='button' class='btn btn-primary edit-paragraph' data-id='" + item.Id + "'>@Resources.Edit</button> <button type='button' class='btn btn-primary delete-paragraph' data-id='" + item.Id + "'>@Resources.Delete</button></td>";
                    row += "</tr>";

                    $('table#gridParagraphs TBODY').append(row);
                });

                InitParagraphModal();
            },
            processData: false,
            async: true
        });
    }

    function RefreshAlbumDetails() {
        var url = "@Url.Content("~/")AlbumDetails/GetAlbumDetails?AlbumId=" + $("#Id").val();
        $.ajax({
            type: 'GET',
            dataType: 'Json',
            url: url,
            success: function(data) {

                $('table#gridAlbumDetails TBODY').empty();

                $.each(data, function (idx, item) {
                    var row = "<tr>";
                    row += (item.ImageID ? '<td><img src="/admin/Images/Image/' + item.ImageID + '?width=100" width=100 height=100 /></td>' : '<td><i class="fa fa-question-circle fa-4x"></i></td>');
                    row += '<td>' + item.Name + '</td>';
                    row += "<td align='right'><button type='button' class='btn btn-primary edit-ad' data-id='" + item.Id + "'>@Resources.Edit</button> <button type='button' class='btn btn-primary delete-ad' data-id='" + item.Id + "'>@Resources.Delete</button></td>";
                    row += "</tr>";

                    $('table#gridAlbumDetails TBODY').append(row);
                });

                InitAlbumDetailModal();
            },
            processData: false,
            async: true
        });
    }

    function AddAsterisk() {
        $('input[type=text]').each(function() {
            var req = $(this).attr('data-val-required');
            if (undefined != req) {
                var label = $('label[for="' + $(this).attr('id') + '"]');
                var text = label.text();
                if (text.length > 0 && text.indexOf('*') === -1) {
                    label.append('<span style="color:red"> *</span>');
                }
            }
        });
    }

    function onCreateSuccess(data) {

        totalCount = data.totalCount;

        var pageSize = @Model.PageSize;
        var currentPageIndex = Math.floor((totalCount - 1) / pageSize) + 1;

        InitPager();
        InitRowFilters();
        RefreshGrid();
    }

    function InitDatePicker() {

        $('.datetimepicker').datetimepicker({
            format: '@UIHelper.GetDateTimeFormat()'
        });

        $('.datepicker').datetimepicker({
            format: '@UIHelper.GetDateFormat()'
        });
    }

    var totalCount = @Model.TotalCount ;
    var currentPageIndex = 1;

    $(document).ready(function() {

        InitModal();

        InitPager();

        RefreshGrid();

        InitRowFilters();
    });

</script>
}