@using Bionet4.Data.Properties
@using Bionet4.Admin.Helpers
@model Bionet4.Data.Models.Article

@{
    var controller = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();

    ViewBag.Title = controller;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@controller</h2>

<h4 class="modal-title" id="myModalLabel">@Resources.Edit</h4>

@using (Ajax.BeginForm("UpdatePartial", null,
    new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        UpdateTargetId = "form-content",
        OnSuccess = "window.close();"
    },
    new { @id = "frmMain" }))
{

    <div class="modal-body">

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CreatedDateTime)
        @Html.HiddenFor(model => model.SeqID)

        <div class="form-group">
            @Html.LabelFor(model => model.ArticleType, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.ArticleType, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ArticleType, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageID, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.ImageID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageID, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FaIcon, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.FaIcon, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FaIcon, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PublishDate, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExternalURL, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.ExternalURL, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ExternalURL, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">

            <div style="padding-bottom: 10px;">
                <button type="button" class="btn btn-default create-paragraph">@Resources.CreateNew</button>
            </div>

            <table class="table" id="gridParagraphs">

                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Name</th>
                        <th>Description</th>
                        <th></th>
                    </tr>
                </thead>

                <tbody></tbody>

            </table>
        </div>

    </div>

    <div class="modal-footer">
        <button type="submit" class="btn btn-primary">@Resources.Save</button>
    </div>

    <div id="form-content"></div>
}

<!-- Modal - 2nd level -->
<div class="modal fade" id="modal2" tabindex="-1" role="dialog" aria-labelledby="modalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="modal2-content"></div>
    </div>
</div>

<!-- loading spinner -->
<div class="modal fade" id="loader" role="dialog" style="top: 300px; left: 300px;">
    <div class="modal-dialog">
        <div class="loader"></div>
    </div>
</div>

@section scripts {

    @Styles.Render("~/Content/datetimepicker")
    @Scripts.Render("~/bundles/datetimepicker")

    @Styles.Render("~/Content/dropzone")
    @Scripts.Render("~/bundles/dropzone")

    @Styles.Render("~/Content/jQuery-File-Upload")
    @Scripts.Render("~/bundles/jQuery-File-Upload")

    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/ckeditor")

    <script type="text/javascript">

        function InitParagraphModal() {

            $('.create-paragraph').unbind();
            $('.create-paragraph').click(function () {
                var url = "@Url.Content("~/")Paragraphs/CreateParagraph?ArticleId=" + $("#Id").val();
                $.get(url, function(data) {
                    $('#modal2-content').html(data);

                    $('#modal2').modal('show');
                    jQuery.validator.unobtrusive.parse('#frmModal2');

                    AddAsterisk();
                });
            });

            $('.edit-paragraph').unbind();
            $('.edit-paragraph').click(function() {
                var url = "@Url.Content("~/")Paragraphs/UpdatePartial";
                var id = $(this).attr('data-id');
                $.get(url + '/' + id, function(data) {
                    $('#modal2-content').html(data);

                    $('#modal2').modal('show');
                    jQuery.validator.unobtrusive.parse('#frmModal2');

                    AddAsterisk();
                });
            });

            $('.delete-paragraph').unbind();
            $('.delete-paragraph').click(function () {
                if (confirm('@Resources.DeleteConfirm'))
                {
                    var url = "@Url.Content("~/")Paragraphs/DestroyPartial";
                    var id = $(this).attr('data-id');
                    $.get(url + '/' + id, function(data) {
                        RefreshParagraphs();
                    });
                }
            });
        }

        function RefreshParagraphs() {
            var url = "@Url.Content("~/")Paragraphs/GetParagraphs?ArticleId=" + $("#Id").val();
            $.ajax({
                type: 'GET',
                dataType: 'Json',
                url: url,
                success: function(data) {

                    $('table#gridParagraphs TBODY').empty();

                    $.each(data, function (idx, item) {
                        var row = "<tr>";
                        row += (item.ImageID ? '<td><img src="/admin/Images/Image/' + item.ImageID + '?width=100" width=100 height=100 /></td>' : '<td><i class="fa ' + (item.FaIcon ? item.FaIcon : 'fa-question-circle') + ' fa-4x"></i></td>');
                        row += '<td>' + item.Name + '</td>';
                        row += '<td>' + item.Description + '</td>';
                        row += "<td align='right'><button type='button' class='btn btn-primary edit-paragraph' data-id='" + item.Id + "'>@Resources.Edit</button> <button type='button' class='btn btn-primary delete-paragraph' data-id='" + item.Id + "'>@Resources.Delete</button></td>";
                        row += "</tr>";

                        $('table#gridParagraphs TBODY').append(row);
                    });

                    InitParagraphModal();
                },
                processData: false,
                async: true
            });
        }

        function InitDatePicker() {

            $('.datetimepicker').datetimepicker({
                format: '@UIHelper.GetDateTimeFormat()'
            });

            $('.datepicker').datetimepicker({
                format: '@UIHelper.GetDateFormat()'
            });
        }

        function InitCkEditor() {

            @foreach (Bionet4.Admin.ViewModels.FieldInfo prop in ViewBag.RtfFields)
            {
                <text>
                CKEDITOR.replace('@prop.Name');
                </text>
            }
        }

        function AddAsterisk() {
            $('input[type=text]').each(function () {
                var req = $(this).attr('data-val-required');
                if (undefined != req) {
                    var label = $('label[for="' + $(this).attr('id') + '"]');
                    var text = label.text();
                    if (text.length > 0 && text.indexOf('*') === -1) {
                        label.append('<span style="color:red"> *</span>');
                    }
                }
            });
        }

        $(document).ready(function () {

            RefreshParagraphs();
            InitDatePicker();
            InitCkEditor();
        });

    </script>
}